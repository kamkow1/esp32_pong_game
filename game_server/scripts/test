#!/bin/sh

COLOR_RESET='\e[0m'
FG_COLOR_RED='\e[0;31m'
FG_COLOR_PURPLE='\e[0;35m'
FG_COLOR_BLUE='\e[0;34m'
FG_COLOR_YELLOW='\e[0;33m'

ESP32_SERVER_IP="192.168.1.100"
ESP32_SERVER_PORT="80"

M_OK="M_OK"
M_GAME_START="M_GAME_START"
M_GAME_END="M_GAME_END"
M_PLAYER_MOVE="M_PLAYER_MOVE"
M_DUMP_BOARD="M_DUMP_BOARD"

PLAYER1="1"
PLAYER2="2"

echo "Running simple tests"

print_pre_test_msg()
{
  sending=$1
  expected=$2
  echo "sending: $FG_COLOR_BLUE $1 $COLOR_RESET, expecting $FG_COLOR_YELLOW $2 $COLOR_RESET"
}

run_test_cmd()
{
  test_name=$1
  test_desc=$2
  test_command=$3
  echo "Description: " $2
  echo "[$FG_COLOR_RED $1 $COLOR_RESET results ]: " $FG_COLOR_PURPLE $test_command $COLOR_RESET
}

# test 1
# M_GAME_START
print_pre_test_msg $M_GAME_START $M_OK
run_test_cmd "test1" "sends the game start signal to the server, expects a positive M_OK response" $(echo "$M_GAME_START|player1|player2" | nc -w 1 "$ESP32_SERVER_IP" "$ESP32_SERVER_PORT")

# test 2.1
# M_PLAYER_MOVE ( +2 ) 
print_pre_test_msg $M_PLAYER_MOVE $M_OK 
run_test_cmd "test2.1" "moves the player by +2 units on the board, expects a positive M_OK response" $(echo "$M_PLAYER_MOVE|$PLAYER1|2" | nc -w 1 "$ESP32_SERVER_IP" "$ESP32_SERVER_PORT")

# test 2.2
# M_PLAYER_MOVE ( -2 ) 
print_pre_test_msg $M_PLAYER_MOVE $M_OK 
run_test_cmd "test2.2" "moves the player by -2 units on the board, expects a positive M_OK response" $(echo "$M_PLAYER_MOVE|$PLAYER1|-2" | nc -w 1 "$ESP32_SERVER_IP" "$ESP32_SERVER_PORT")

# test 3
# M_DUMP_BOARD
print_pre_test_msg $M_DUMP_BOARD "left to manual verification"
run_test_cmd "test3" "dumps the current state of the game board" $(echo "$M_DUMP_BOARD" | nc -w 1 "$ESP32_SERVER_IP" "$ESP32_SERVER_PORT")

# WARNING: M_GAME_END test invokes `free()` so make sure that this test is called the last
# test 4
# M_GAME_END
print_pre_test_msg $M_GAME_END $M_OK
run_test_cmd "test2" "sends the game end signal to the server, expects a positive M_OK response - the game has ended correctly" $(echo "$M_GAME_END" | nc -w 1 "$ESP32_SERVER_IP" "$ESP32_SERVER_PORT")  

